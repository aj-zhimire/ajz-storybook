name: Deploy static site to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # If there's a Node build step (Astro, Vite, 11ty, Next static export, etc.),
      # this will detect it and build. If not, it just skips to "prepare-static".
      - name: Detect Node project
        id: detect
        run: |
          if [ -f package.json ]; then
            echo "has_node=true" >> $GITHUB_OUTPUT
          else
            echo "has_node=false" >> $GITHUB_OUTPUT
          fi

      - name: Use Node 20
        if: steps.detect.outputs.has_node == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        if: steps.detect.outputs.has_node == 'true'
        run: npm ci

      - name: Build (if script exists)
        if: steps.detect.outputs.has_node == 'true'
        run: |
          if npm run | grep -q "^  build"; then
            npm run build
          else
            echo "No build script found; skipping build."
          fi

      # Pick the right output dir: dist/ or build/ if present, else the repo root
      - name: Prepare static output
        id: out
        run: |
          if [ -d dist ]; then
            echo "outdir=dist" >> $GITHUB_OUTPUT
          elif [ -d build ]; then
            echo "outdir=build" >> $GITHUB_OUTPUT
          else
            mkdir -p _site
            rsync -av --exclude '.git' --exclude '.github' --exclude 'node_modules' ./ _site/
            echo "outdir=_site" >> $GITHUB_OUTPUT
          fi

      # SPA fallback so /route refresh doesnâ€™t 404 on Pages
      - name: Add 404 fallback
        run: |
          if [ -f "${{ steps.out.outputs.outdir }}/index.html" ]; then
            cp "${{ steps.out.outputs.outdir }}/index.html" "${{ steps.out.outputs.outdir }}/404.html"
          fi

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.out.outputs.outdir }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4